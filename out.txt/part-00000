(package,1)
(Spark,3)
(it,1)
(The,1)
(its,1)
(//Stop,1)
(have,1)
(conf,1)
(SparkConf},1)
(3,,1)
(},1)
(each,2)
(sc.parallelize(data),1)
(type,3)
(Configuration,1)
(we,1)
(result,2)
(*/,1)
(resulting,2)
(RDD,5)
(Collections,1)
(the,11)
(not,1)
(extends,1)
(BasicMap,1)
(element,2)
(if,1)
(SparkContext(conf),1)
(//transform,1)
(println(result.count()),1)
(be,3)
(type,,1)
(our,2)
(as,1)
(strings,1)
(It,1)
(value,1)
(an,2)
(/*,1)
(2,,1)
(String,1)
(5),1)
(App{,1)
(parse,1)
(x*x),1)
(return,2)
(collection,1)
(applies,1)
(//Call,1)
(RDD[,1)
(is,1)
(same,1)
(had,1)
(action,1)
(takes,1)
(Array(1,,1)
(with,1)
(would,2)
(data,1)
(println(result.collect().mkString(",")),1)
(in,3)
(**,5)
(object,1)
(sc,1)
(new,3)
(SparkConf().setAppName("BasicMap").setMaster("local"),1)
(//Define,3)
(input.map(x,1)
(=>,1)
(input,4)
(=,5)
(s,1)
(Double,,1)
(sc.stop(),1)
(Context,2)
(note,1)
(map(),2)
(import,1)
(4,,1)
(a,3)
(that,1)
(useful,1)
(to,4)
(,40)
(val,5)
(of,2)
(does,1)
(transformation,1)
(//Parallelize,1)
(org.myorg.spark,1)
(String],1)
(so,1)
(RDD.,1)
(org.apache.spark.{SparkContext,,1)
(map()â€™,1)
(and,4)
(function,3)
(were,1)
(being,1)
